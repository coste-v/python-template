image: python:3.12-slim

variables:
  MIN_COVERAGE: 80

stages:
  - tests
  - min-coverage
  - publish

lint-test:
  stage: tests
  before_script:
    - pip install black
  script:
    - black --check .

import-sort-test:
  stage: tests
  before_script:
    - pip install isort
  script:
    - isort . --check-only

unit-test:
  stage: tests
  before_script:
    - pip install --upgrade pip
    - pip install poetry==1.8.3
    - poetry config virtualenvs.create false
    - poetry install
  script:
    - coverage run -m pytest
    - coverage json
    - coverage report -m
  artifacts:
    paths:
      - coverage.json
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'

min-coverage-test:
  stage: min-coverage
  before_script:
    - apt-get update && apt-get install jq -y
  script:
    - jsonStr="$(cat $CI_PROJECT_DIR/coverage.json)"
    - coverage="$(echo $jsonStr | jq .totals.percent_covered)"
    - if (( $coverage < $MIN_COVERAGE )) ; then echo "$coverage% of code coverage below threshold of $MIN_COVERAGE%" && exit 1 ; else exit 0 ; fi

gitlab-publish:
  stage: publish
  before_script:
    - pip install --upgrade pip
    - pip install poetry==1.8.3
    - poetry config virtualenvs.create false
    - poetry install
  script:
    - poetry build
    - poetry config repositories.gitlab "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/packages/pypi"
    - poetry config http-basic.gitlab gitlab-ci-token "$CI_JOB_TOKEN"
    - poetry publish --repository gitlab